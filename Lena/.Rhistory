vecinos[i,1]=0
}
for (i in 1:length(tt)){
tresPuntos <- tt[i,]
for(j in 1:3){
numvec <- vecinos[tresPuntos[j],1]
vecinos[tresPuntos[j],numvec+1]=trespuntos[(j+1)%3+1]
vecinos[tresPuntos[j],numvec+2]=trespuntos[(j+2)%3+1]
vecinos[trespuntos[j],1] = numvec+2
}
vecinos <- matrix(-1,nrow = nrow(nube3D), ncol = 10)
for (i in 1:nrow(vecinos)){
vecinos[i,1]=0
}
for (i in 1:length(tt)){
tresPuntos <- tt[i,]
for(j in 1:3){
numvec <- vecinos[tresPuntos[j],1]
vecinos[tresPuntos[j],numvec+1]=trespuntos[(j+1)%3+1]
vecinos[tresPuntos[j],numvec+2]=trespuntos[(j+2)%3+1]
vecinos[trespuntos[j],1] = numvec+2
}
}
for (i in 1:length(tt)){
tresPuntos <- tt[i,]
for(j in seq(1:3)){
numvec <- vecinos[tresPuntos[j],1]
vecinos[tresPuntos[j],numvec+1] <- trespuntos[(j+1)%3+1]
vecinos[tresPuntos[j],numvec+2] <- trespuntos[(j+2)%3+1]
vecinos[trespuntos[j],1] <- numvec+2
}
}
vecinos <- matrix(-1,nrow = nrow(nube3D), ncol = 10)
for (i in 1:nrow(vecinos)){
vecinos[i,1]=0
}
for (i in 1:length(tt)){
tresPuntos <- tt[i,]
for(j in seq(1:3)){
numvec <- vecinos[tresPuntos[j],1]
vecinos[tresPuntos[j],numvec+1] <- trespuntos[(j+1)%%3+1]
vecinos[tresPuntos[j],numvec+2] <- trespuntos[(j+2)%%3+1]
vecinos[trespuntos[j],1] <- numvec+2
}
}
vecinos <- matrix(-1,nrow = nrow(nube3D), ncol = 10)
for (i in 1:nrow(vecinos)){
vecinos[i,1]=0
}
for (i in 1:length(tt)){
tresPuntos <- tt[i,]
for(j in seq(1:3)){
numvec <- vecinos[tresPuntos[j],1]
vecinos[tresPuntos[j],numvec+1] <- trespuntos[(j+1)%%3+1]
vecinos[tresPuntos[j],numvec+2] <- trespuntos[(j+2)%%3+1]
vecinos[tresPuntos[j],1] <- numvec+2
}
}
vecinos <- matrix(-1,nrow = nrow(nube3D), ncol = 10)
for (i in 1:nrow(vecinos)){
vecinos[i,1]=0
}
for (i in 1:length(tt)){
tresPuntos <- tt[i,]
for(j in seq(1:3)){
numvec <- vecinos[tresPuntos[j],1]
vecinos[tresPuntos[j],numvec+1] <- tresPuntos[(j+1)%%3+1]
vecinos[tresPuntos[j],numvec+2] <- tresPuntos[(j+2)%%3+1]
vecinos[tresPuntos[j],1] <- numvec+2
}
}
vecinos <- matrix(-1,nrow = nrow(nube3D), ncol = 10)
for (i in 1:nrow(vecinos)){
vecinos[i,1]=0
}
for (i in 1:length(tt)){
tresPuntos <- tt[i,]
for(j in seq(0:2)){
p=j+1
numvec <- vecinos[tresPuntos[p],1]
vecinos[tresPuntos[j],numvec+1] <- tresPuntos[(j+1)%%3+1]
vecinos[tresPuntos[j],numvec+2] <- tresPuntos[(j+2)%%3+1]
vecinos[tresPuntos[j],1] <- numvec+2
}
}
tt
vecinos <- matrix(-1,nrow = nrow(nube3D), ncol = 10)
for (i in 1:nrow(vecinos)){
vecinos[i,1]=0
}
for (i in 1:nrow(tt)){
tresPuntos <- tt[i,]
for(j in seq(0:2)){
p=j+1
numvec <- vecinos[tresPuntos[p],1]
vecinos[tresPuntos[j],numvec+1] <- tresPuntos[(j+1)%%3+1]
vecinos[tresPuntos[j],numvec+2] <- tresPuntos[(j+2)%%3+1]
vecinos[tresPuntos[j],1] <- numvec+2
}
}
vecinos
vecinos <- matrix(-1,nrow = nrow(nube3D), ncol = 10)
for (i in 1:nrow(vecinos)){
vecinos[i,1]=0
}
for (i in 1:nrow(tt)){
tresPuntos <- tt[i,]
for(j in seq(0:2)){
p=j+1
numvec <- vecinos[tresPuntos[p],1]
vecinos[tresPuntos[p],numvec+1] <- tresPuntos[(j+1)%%3+1]
vecinos[tresPuntos[p],numvec+2] <- tresPuntos[(j+2)%%3+1]
vecinos[tresPuntos[p],1] <- numvec+2
}
}
vecinos <- matrix(-1,nrow = nrow(nube3D), ncol = 10)
for (i in 1:nrow(vecinos)){
vecinos[i,1]=0
}
for (i in 1:nrow(tt)){
tresPuntos <- tt[i,]
for(j in seq(0:2)){
p=j+1
numvec <- vecinos[tresPuntos[p],1]
print "Hay "+numvec+"vecinos"
vecinos[tresPuntos[p],numvec+1] <- tresPuntos[(j+1)%%3+1]
vecinos[tresPuntos[p],numvec+2] <- tresPuntos[(j+2)%%3+1]
vecinos[tresPuntos[p],1] <- numvec+2
}
}
vecinos <- matrix(-1,nrow = nrow(nube3D), ncol = 10)
for (i in 1:nrow(vecinos)){
vecinos[i,1]=0
}
for (i in 1:nrow(tt)){
tresPuntos <- tt[i,]
for(j in seq(0:2)){
p=j+1
numvec <- vecinos[tresPuntos[p],1]
print ("Hay "+numvec+"vecinos")
vecinos[tresPuntos[p],numvec+1] <- tresPuntos[(j+1)%%3+1]
vecinos[tresPuntos[p],numvec+2] <- tresPuntos[(j+2)%%3+1]
vecinos[tresPuntos[p],1] <- numvec+2
}
}
vecinos <- matrix(-1,nrow = nrow(nube3D), ncol = 10)
for (i in 1:nrow(vecinos)){
vecinos[i,1]=0
}
for (i in 1:nrow(tt)){
tresPuntos <- tt[i,]
for(j in seq(0:2)){
p=j+1
numvec <- vecinos[tresPuntos[p],1]
print ("Hay ",numvec,"vecinos")
vecinos[tresPuntos[p],numvec+1] <- tresPuntos[(j+1)%%3+1]
vecinos[tresPuntos[p],numvec+2] <- tresPuntos[(j+2)%%3+1]
vecinos[tresPuntos[p],1] <- numvec+2
}
}
vecinos <- matrix(-1,nrow = nrow(nube3D), ncol = 10)
for (i in 1:nrow(vecinos)){
vecinos[i,1]=0
}
for (i in 1:nrow(tt)){
tresPuntos <- tt[i,]
for(j in seq(0:2)){
p=j+1
numvec <- vecinos[tresPuntos[p],1]
print (numvec)
vecinos[tresPuntos[p],numvec+1] <- tresPuntos[(j+1)%%3+1]
vecinos[tresPuntos[p],numvec+2] <- tresPuntos[(j+2)%%3+1]
vecinos[tresPuntos[p],1] <- numvec+2
}
}
vecinos <- matrix(-1,nrow = nrow(nube3D), ncol = 10)
for (i in 1:nrow(vecinos)){
vecinos[i,1]=0
}
for (i in 1:nrow(tt)){
tresPuntos <- tt[i,]
for(j in seq(0:2)){
p=j+1
numvec <- vecinos[tresPuntos[p],1]+1
print (numvec)
vecinos[tresPuntos[p],numvec+1] <- tresPuntos[(j+1)%%3+1]
vecinos[tresPuntos[p],numvec+2] <- tresPuntos[(j+2)%%3+1]
vecinos[tresPuntos[p],1] <- numvec+2
}
}
vecinos <- matrix(-1,nrow = nrow(nube3D), ncol = 10)
for (i in 1:nrow(vecinos)){
vecinos[i,1]=0
}
//for (i in 1:nrow(tt)){
for (i in 1:5){
tresPuntos <- tt[i,]
for(j in seq(0:2)){
p=j+1
numvec <- vecinos[tresPuntos[p],1]+1
print (numvec)
vecinos[tresPuntos[p],numvec+1] <- tresPuntos[(j+1)%%3+1]
vecinos[tresPuntos[p],numvec+2] <- tresPuntos[(j+2)%%3+1]
vecinos[tresPuntos[p],1] <- numvec+2
print(head(vecinos))
}
}
vecinos <- matrix(-1,nrow = nrow(nube3D), ncol = 10)
for (i in 1:nrow(vecinos)){
vecinos[i,1]=0
}
//for (i in 1:nrow(tt)){
for (i in 1:5){
tresPuntos <- tt[i,]
for(j in seq(0:2)){
p=j+1
numvec <- vecinos[tresPuntos[p],1]
print (numvec)
vecinos[tresPuntos[p],numvec+1+1] <- tresPuntos[(j+1)%%3+1]
vecinos[tresPuntos[p],numvec+1+2] <- tresPuntos[(j+2)%%3+1]
vecinos[tresPuntos[p],1] <- numvec+2
print(head(vecinos))
}
}
vecinos <- matrix(-1,nrow = nrow(nube3D), ncol = 10)
for (i in 1:nrow(vecinos)){
vecinos[i,1]=0
}
//for (i in 1:nrow(tt)){
for (i in 1:15){
tresPuntos <- tt[i,]
for(j in seq(0:2)){
p=j+1
numvec <- vecinos[tresPuntos[p],1]
print (numvec)
vecinos[tresPuntos[p],numvec+1+1] <- tresPuntos[(j+1)%%3+1]
vecinos[tresPuntos[p],numvec+1+2] <- tresPuntos[(j+2)%%3+1]
vecinos[tresPuntos[p],1] <- numvec+2
print(head(vecinos))
}
}
vecinos <- matrix(-1,nrow = nrow(nube3D), ncol = 10)
for (i in 1:nrow(vecinos)){
vecinos[i,1]=0
}
//for (i in 1:nrow(tt)){
for (i in 1:15){
tresPuntos <- tt[i,]
p1=tresPuntos[1]
p2=tresPuntos[2]
p3=tresPuntos[3]
for (j in seq(1:3)){
numVec <- vecinos[p1,1]
vecinos[p1,numVec+2]=p2
vecinos[p1,numVec+3]=p3
vecinos[p1,1]=numVec+2
auz<-p1
p1<-p2
p2<-p3
p3<-aux
}
print(head(vecinos))
}
vecinos <- matrix(-1,nrow = nrow(nube3D), ncol = 10)
for (i in 1:nrow(vecinos)){
vecinos[i,1]=0
}
//for (i in 1:nrow(tt)){
for (i in 1:15){
tresPuntos <- tt[i,]
p1=tresPuntos[1]
p2=tresPuntos[2]
p3=tresPuntos[3]
for (j in seq(1:3)){
numVec <- vecinos[p1,1]
vecinos[p1,numVec+2]=p2
vecinos[p1,numVec+3]=p3
vecinos[p1,1]=numVec+2
aux<-p1
p1<-p2
p2<-p3
p3<-aux
}
print(head(vecinos))
}
vecinos <- matrix(-1,nrow = nrow(nube3D), ncol = 10)
for (i in 1:nrow(vecinos)){
vecinos[i,1]=0
}
//for (i in 1:nrow(tt)){
for (i in 1:15){
tresPuntos <- tt[i,]
p1=tresPuntos[1]
p2=tresPuntos[2]
p3=tresPuntos[3]
for (j in seq(1:3)){
numVec <- vecinos[p1,1]
vecinos[p1,numVec+2]=p2
vecinos[p1,numVec+3]=p3
vecinos[p1,1]=numVec+2
aux<-p1
p1<-p2
p2<-p3
p3<-aux
}
print(vecinos)
}
isNeighbour <- function(vecs,row,point){
numVec <- vecs[row,1]
isNeigh <- FALSE
k=2
while (!isNeigh && k<=numVec+2){
if (vecs[row,k]==point) isNeigh <- TRUE
k++
}
return(isNeigh)
}
isNeighbour <- function(vecs,row,point){
numVec <- vecs[row,1]
isNeigh <- FALSE
k=2
while (!isNeigh && k<=numVec+2){
if (vecs[row,k]==point) isNeigh <- TRUE
k <- k +1
}
return(isNeigh)
}
vecinos <- matrix(-1,nrow = nrow(nube3D), ncol = 10)
for (i in 1:nrow(vecinos)){
vecinos[i,1]=0
}
//for (i in 1:nrow(tt)){ ///OJO, que se repiten los vecinos
for (i in 1:15){
tresPuntos <- tt[i,]
p1=tresPuntos[1]
p2=tresPuntos[2]
p3=tresPuntos[3]
for (j in seq(1:3)){
numVec <- vecinos[p1,1]
if (!isNeigh(vecinos,p1,p2)){
vecinos[p1,numVec+2]=p2
numVec <- numVec +1
}
if (!isNeigh(vecinos,p1,p3)){
vecinos[p1,numVec+2]=p3
numVec <- numVec +1
}
vecinos[p1,1]=numVec
aux<-p1
p1<-p2
p2<-p3
p3<-aux
}
print(vecinos)
}
vecinos <- matrix(-1,nrow = nrow(nube3D), ncol = 10)
for (i in 1:nrow(vecinos)){
vecinos[i,1]=0
}
for (i in 1:15){
tresPuntos <- tt[i,]
p1=tresPuntos[1]
p2=tresPuntos[2]
p3=tresPuntos[3]
for (j in seq(1:3)){
numVec <- vecinos[p1,1]
if (!isNeigh(vecinos,p1,p2)){
vecinos[p1,numVec+2]=p2
numVec <- numVec +1
}
if (!isNeighbour(vecinos,p1,p3)){
vecinos[p1,numVec+2]=p3
numVec <- numVec +1
}
vecinos[p1,1]=numVec
aux<-p1
p1<-p2
p2<-p3
p3<-aux
}
print(vecinos)
}
for (i in 1:15){
tresPuntos <- tt[i,]
p1=tresPuntos[1]
p2=tresPuntos[2]
p3=tresPuntos[3]
for (j in seq(1:3)){
numVec <- vecinos[p1,1]
if (!isNeighbour(vecinos,p1,p2)){
vecinos[p1,numVec+2]=p2
numVec <- numVec +1
}
if (!isNeighbour(vecinos,p1,p3)){
vecinos[p1,numVec+2]=p3
numVec <- numVec +1
}
vecinos[p1,1]=numVec
aux<-p1
p1<-p2
p2<-p3
p3<-aux
}
print(vecinos)
}
listNeighbours <- function(nube3D){
tt <- delaunayn(nube3D[,1:2])
vecinos <- matrix(-1,nrow = nrow(nube3D), ncol = 30)
for (i in 1:nrow(vecinos)){
vecinos[i,1]=0
}
for (i in 1:nrow(tt)){
tresPuntos <- tt[i,]
p1=tresPuntos[1]
p2=tresPuntos[2]
p3=tresPuntos[3]
for (j in seq(1:3)){
numVec <- vecinos[p1,1]
if (!isNeighbour(vecinos,p1,p2)){
vecinos[p1,numVec+2]=p2
numVec <- numVec +1
}
if (!isNeighbour(vecinos,p1,p3)){
vecinos[p1,numVec+2]=p3
numVec <- numVec +1
}
vecinos[p1,1]=numVec
aux<-p1
p1<-p2
p2<-p3
p3<-aux
}
print(vecinos)
}
}
listNeighbours <- function(nube3D){
tt <- delaunayn(nube3D[,1:2])
vecinos <- matrix(-1,nrow = nrow(nube3D), ncol = 30)
for (i in 1:nrow(vecinos)){
vecinos[i,1]=0
}
for (i in 1:nrow(tt)){
tresPuntos <- tt[i,]
p1=tresPuntos[1]
p2=tresPuntos[2]
p3=tresPuntos[3]
for (j in seq(1:3)){
numVec <- vecinos[p1,1]
if (!isNeighbour(vecinos,p1,p2)){
vecinos[p1,numVec+2]=p2
numVec <- numVec +1
}
if (!isNeighbour(vecinos,p1,p3)){
vecinos[p1,numVec+2]=p3
numVec <- numVec +1
}
vecinos[p1,1]=numVec
aux<-p1
p1<-p2
p2<-p3
p3<-aux
}
}
return(vecinos)
}
adyacencias<-listNeighbours(puntos3D10)
head(adyacencias)
pintapunto <- function(x,y,color){
points(x,y,col=color,pch=20)
}
pintapunto(puntos3D10[1])
puntos3D10[1,]
c(puntos3D10[1,])
cbind(puntos3D10[1,])
as.list(puntos3D10[1,])
pintapunto(as.list(puntos3D10[1,]))
pintapunto(c(puntos3D10[1,]))
c(puntos3D10[1,])
pintapunto(puntos3D10[1,1],puntos3D10[1,2],puntos3D10[1,3])
pintapunto(puntos3D10[1,1],puntos3D10[1,2],puntos3D10[1,3])
pintapunto <- function(x,y,color){
points(x,y,col=color,pch=15)
}
pintapunto(puntos3D10[1,1],puntos3D10[1,2],puntos3D10[1,3])
pintapunto(puntos3D10[10,1],puntos3D10[10,2],puntos3D10[10,3])
pintapunto(puntos3D10[10,1],puntos3D10[10,2],"red")
pintapunto(puntos3D10[10,1],puntos3D10[10,2],puntos3D10[10,3])
pintapunto(puntos3D10[100,1],puntos3D10[100,2],puntos3D10[100,3])
pintapunto <- function(x,y,color){
points(x,y,col=color,pch=20)
}
pintapunto(puntos3D10[100,1],puntos3D10[100,2],puntos3D10[100,3])
pinta(lenaBaja10)
pintapunto(puntos3D10[100,1],puntos3D10[100,2],puntos3D10[100,3])
pintapunto(puntos3D10[1000,1],puntos3D10[1000,2],puntos3D10[1000,3])
puntos3D10[1000,3]
pintapunto(puntos3D10[5000,1],puntos3D10[5000,2],puntos3D10[5000,3])
puntos3D10[5000,3]
pintapunto(puntos3D10[5000,1],puntos3D10[5000,2],0)
pintapunto(puntos3D10[5000,1],puntos3D10[5000,2],1)
pintapunto <- function(x,y,color){
points(x,y,col=color,pch=19)
}
pintapunto(puntos3D10[5000,1],puntos3D10[5000,2],1)
pintapunto(puntos3D10[5000,1],puntos3D10[5000,2],0)
pintapunto(puntos3D10[5000,1],puntos3D10[5000,2],1)
head(puntos3D10)
pinta(lenaBaja90)
pinta(lenaBaja10)
write.csv(puntos3D10,file="lena10.csv")
puntos3D90<-getPoints3D(lenaBaja90)
write.csv(puntos3D90,file="lena90.csv")
